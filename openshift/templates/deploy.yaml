# Copyright 2020 The Province of British Columbia
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: |
      Deployment template for the Platform Serices
      project registry.
    iconClass: icon-node
  name: ${NAME}-web
objects:
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}-web
      name: ${NAME}-web
    spec:
      path: ""
      port:
        targetPort: 8080-tcp
      tls:
        termination: edge
      to:
        kind: Service
        name: ${NAME}-web
        weight: 100
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-web
      name: ${NAME}-web
    spec:
      selector:
        app: ${NAME}-web
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: ${NAME}-web
      name: ${NAME}-web
    spec:
      strategy:
        type: RollingUpdate
      replicas: 1
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          app: ${NAME}-web
      template:
        metadata:
          labels:
            app: ${NAME}-web
          name: ${NAME}-web
        spec:
          containers:
            - name: ${NAME}-web
              # image: ''
              image: "image-registry.openshift-image-registry.svc:5000/be8465-tools/ccup-web:${SOURCE_IMAGE_TAG}"
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /
                  port: 8080
                initialDelaySeconds: 180
                timeoutSeconds: 3
              ports:
                - containerPort: 8080
              env:
                # - name: LOG_LEVEL
                #   value: ${LOG_LEVEL}
                # - name: SERVICE_PORT
                #   value: "8080"
                # - name: SERVICE_IP
                #   value: "0.0.0.0"
                # - name: SOURCE_IMAGE_NAME
                #   value: "ccup-web"
                # - name: RealIpFrom
                #   value: ${RealIpFrom}
                # - name: IpFilterRules
                #   value: ${IpFilterRules}
                # - name: AdditionalRealIpFromRules
                #   value: ${AdditionalRealIpFromRules}
                # - name: USE_SPLUNK_FORWARDER
                #   value: ${USE_SPLUNK_FORWARDER}
                # - name: HTTP_BASIC
                #   value: ""
                # - name: HTTP_BASIC_USERNAME
                #   value: ${HTTP_BASIC_USERNAME}
                # - name: HTTP_BASIC_PASSWORD
                #   value: ${HTTP_BASIC_PASSWORD}
                # - name: SPLUNK_AUTH_TOKEN
                #   valueFrom:
                #     secretKeyRef:
                #       name: ccup-web-splunk-auth-token
                #       key: token
                # - name: SPA_ENV_AUTH_TOKEN
                #   valueFrom:
                #     secretKeyRef:
                #       name: ccup-web-spa-env-auth-token
                #       key: token
                # - name: CCUP_ENV
                #   value: ${CCUP_ENV}
                # - name: CCUP_VERSION
                #   value: ${CCUP_VERSION}
                # - name: ROUTER_DEFAULT_SERVER_TIMEOUT
                #   value: ${ROUTER_DEFAULT_SERVER_TIMEOUT}
                # - name: ROUTER_DEFAULT_CLIENT_TIMEOUT
                #   value: ${ROUTER_DEFAULT_CLIENT_TIMEOUT}
              resources:
                # limits:
                #   cpu: 200m
                #   memory: 256Mi
                requests:
                  cpu: 20m
                  memory: 256Mi
              volumeMounts:
                - name: config-vol
                  mountPath: /etc/nginx/nginx.conf
                  subPath: nginx.conf
          volumes:
            - name: config-vol
              configMap:
                name: ${NAME}-web-config
parameters:
  - description: |
      The name/acronym assigned to all of the objects defined in this template. 
      Should match what's in the config.yaml and deploy.yaml.
    displayName: Name
    name: NAME
    required: true
    value: ccup
  - description: |
      The openshift project where builds and target images are stored.
    displayName: Build Project
    name: SOURCE_IMAGE_NAMESPACE
    required: true
    value: be8465-tools
  - description: The name of the source image.
    displayName: Source Image Name
    name: SOURCE_IMAGE_NAME
    value: ccup-web
    required: true
  - description: The tag of the source image.
    displayName: Source Image Tag
    name: SOURCE_IMAGE_TAG
    required: true
    #value: should be either dev, test, or prod. Pass down in command line
  # - description: |
  #     This is used to construct a path based route for the web to access the
  #     API.
  #   displayName: Cluster Domain Name
  #   name: CLUSTER_DOMAIN
  #   required: true
  #   value: apps.silver.devops.gov.bc.ca
  # - description: RealIpFrom for nginx
  #   name: RealIpFrom
  #   value: "142.34.194.118"
  #   required: true
  # - description: AdditionalRealIpFromRules
  #   name: AdditionalRealIpFromRules
  #   value: ""
  #   required: false
  # - description: IpFilterRules
  #   name: IpFilterRules
  #   value: "allow 0.0.0.0/0; deny all;"
  #   required: true
  - description: USE_SPLUNK_FORWARDER
    name: USE_SPLUNK_FORWARDER
    value: "true"
    required: true
  # - description: SPLUNK_AUTH_TOKEN
  #   name: SPLUNK_AUTH_TOKEN
  #   required: false
  #   valueFrom:
  #     secretKeyRef:
  #       name: log-forwarder-auth-token
  #       key: token
  # - description: SPA_ENV_AUTH_TOKEN
  #   name: SPA_ENV_AUTH_TOKEN
  #   required: true
  #   valueFrom:
  #     secretKeyRef:
  #       name: spa-env-server-service-auth-token
  #       key: token
  # - description: CCUP_ENV
  #   name: CCUP_ENV
  #   required: true
  # - description: CCUP_VERSION
  #   name: CCUP_VERSION
  #   required: false
  # - description: ROUTER_DEFAULT_SERVER_TIMEOUT
  #   name: ROUTER_DEFAULT_SERVER_TIMEOUT
  #   value: "60s"
  #   required: false
  # - description: ROUTER_DEFAULT_CLIENT_TIMEOUT
  #   name: ROUTER_DEFAULT_CLIENT_TIMEOUT
  #   value: "60s"
  #   required: false
  # - description: LOG_LEVEL
  #   name: LOG_LEVEL
  #   value: "info"
  #   required: true
